#需要解码的文本
text = 'b lzgg atrfpbnn'
#密钥
custom_key = 'happycoding'

#维吉尼亚算法实现
def vigenere(message, key, direction=1):
    key_index = 0
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    final_message = ''

    for char in message.lower():

        #如果不是字母直接加到字符串上
        if not char.isalpha():
            final_message += char
        else:        
            #选择key重复得到密钥
            key_char = key[key_index % len(key)]
            key_index += 1

            #offset指的是密钥的下标
            offset = alphabet.index(key_char)
            #index指的是密文的下标或者明文的下标 
            index = alphabet.find(char)
            #偏移量
            new_index = (index + offset*direction) % len(alphabet)
            final_message += alphabet[new_index]
    
    return final_message

#解密
def encrypt(message, key):
    return vigenere(message, key)
    
#加密
def decrypt(message, key):
    return vigenere(message, key, -1)

print(f'Encrypted text: {text}')
print(f'Key: {custom_key}')
decryption = encrypt(text, custom_key)
print(f'\nDecrypted text: {decryption}\n')
